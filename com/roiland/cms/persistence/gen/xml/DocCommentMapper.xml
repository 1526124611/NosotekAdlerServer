<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roiland.cms.persistence.gen.mapper.DocCommentMapper" >
  <resultMap id="BaseResultMap" type="com.roiland.cms.persistence.gen.model.DocComment" >
    <id column="doc_comment_id" property="docCommentId" jdbcType="INTEGER" />
    <result column="app_user_id" property="appUserId" jdbcType="INTEGER" />
    <result column="document_id" property="documentId" jdbcType="VARCHAR" />
    <result column="comment_status" property="commentStatus" jdbcType="INTEGER" />
    <result column="comment_datetime" property="commentDatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.roiland.cms.persistence.gen.model.DocComment" extends="BaseResultMap" >
    <result column="comment_content" property="commentContent" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    doc_comment_id, app_user_id, document_id, comment_status, comment_datetime
  </sql>
  <sql id="Blob_Column_List" >
    comment_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.roiland.cms.persistence.gen.model.DocCommentCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from doc_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roiland.cms.persistence.gen.model.DocCommentCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doc_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from doc_comment
    where doc_comment_id = #{docCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from doc_comment
    where doc_comment_id = #{docCommentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.roiland.cms.persistence.gen.model.DocCommentCriteria" >
    delete from doc_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roiland.cms.persistence.gen.model.DocComment" useGeneratedKeys="true" keyProperty="docCommentId" >
    insert into doc_comment (app_user_id, document_id, comment_status, 
      comment_datetime, comment_content)
    values (#{appUserId,jdbcType=INTEGER}, #{documentId,jdbcType=VARCHAR}, #{commentStatus,jdbcType=INTEGER}, 
      #{commentDatetime,jdbcType=TIMESTAMP}, #{commentContent,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.roiland.cms.persistence.gen.model.DocComment" useGeneratedKeys="true" keyProperty="docCommentId" >
    insert into doc_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appUserId != null" >
        app_user_id,
      </if>
      <if test="documentId != null" >
        document_id,
      </if>
      <if test="commentStatus != null" >
        comment_status,
      </if>
      <if test="commentDatetime != null" >
        comment_datetime,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appUserId != null" >
        #{appUserId,jdbcType=INTEGER},
      </if>
      <if test="documentId != null" >
        #{documentId,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null" >
        #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="commentDatetime != null" >
        #{commentDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roiland.cms.persistence.gen.model.DocCommentCriteria" resultType="java.lang.Integer" >
    select count(*) from doc_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update doc_comment
    <set >
      <if test="record.docCommentId != null" >
        doc_comment_id = #{record.docCommentId,jdbcType=INTEGER},
      </if>
      <if test="record.appUserId != null" >
        app_user_id = #{record.appUserId,jdbcType=INTEGER},
      </if>
      <if test="record.documentId != null" >
        document_id = #{record.documentId,jdbcType=VARCHAR},
      </if>
      <if test="record.commentStatus != null" >
        comment_status = #{record.commentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.commentDatetime != null" >
        comment_datetime = #{record.commentDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentContent != null" >
        comment_content = #{record.commentContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update doc_comment
    set doc_comment_id = #{record.docCommentId,jdbcType=INTEGER},
      app_user_id = #{record.appUserId,jdbcType=INTEGER},
      document_id = #{record.documentId,jdbcType=VARCHAR},
      comment_status = #{record.commentStatus,jdbcType=INTEGER},
      comment_datetime = #{record.commentDatetime,jdbcType=TIMESTAMP},
      comment_content = #{record.commentContent,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update doc_comment
    set doc_comment_id = #{record.docCommentId,jdbcType=INTEGER},
      app_user_id = #{record.appUserId,jdbcType=INTEGER},
      document_id = #{record.documentId,jdbcType=VARCHAR},
      comment_status = #{record.commentStatus,jdbcType=INTEGER},
      comment_datetime = #{record.commentDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.roiland.cms.persistence.gen.model.DocComment" >
    update doc_comment
    <set >
      <if test="appUserId != null" >
        app_user_id = #{appUserId,jdbcType=INTEGER},
      </if>
      <if test="documentId != null" >
        document_id = #{documentId,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null" >
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="commentDatetime != null" >
        comment_datetime = #{commentDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=CLOB},
      </if>
    </set>
    where doc_comment_id = #{docCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.roiland.cms.persistence.gen.model.DocComment" >
    update doc_comment
    set app_user_id = #{appUserId,jdbcType=INTEGER},
      document_id = #{documentId,jdbcType=VARCHAR},
      comment_status = #{commentStatus,jdbcType=INTEGER},
      comment_datetime = #{commentDatetime,jdbcType=TIMESTAMP},
      comment_content = #{commentContent,jdbcType=CLOB}
    where doc_comment_id = #{docCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.roiland.cms.persistence.gen.model.DocComment" >
    update doc_comment
    set app_user_id = #{appUserId,jdbcType=INTEGER},
      document_id = #{documentId,jdbcType=VARCHAR},
      comment_status = #{commentStatus,jdbcType=INTEGER},
      comment_datetime = #{commentDatetime,jdbcType=TIMESTAMP}
    where doc_comment_id = #{docCommentId,jdbcType=INTEGER}
  </update>
</mapper>