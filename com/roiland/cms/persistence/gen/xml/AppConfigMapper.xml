<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roiland.cms.persistence.gen.mapper.AppConfigMapper" >
  <resultMap id="BaseResultMap" type="com.roiland.cms.persistence.gen.model.AppConfig" >
    <id column="app_config_id" property="appConfigId" jdbcType="INTEGER" />
    <result column="config_value" property="configValue" jdbcType="VARCHAR" />
    <result column="key_desc" property="keyDesc" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    app_config_id, config_value, key_desc, update_by, update_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roiland.cms.persistence.gen.model.AppConfigCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from app_config
    where app_config_id = #{appConfigId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_config
    where app_config_id = #{appConfigId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.roiland.cms.persistence.gen.model.AppConfigCriteria" >
    delete from app_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roiland.cms.persistence.gen.model.AppConfig" >
    insert into app_config (app_config_id, config_value, key_desc, 
      update_by, update_date)
    values (#{appConfigId,jdbcType=INTEGER}, #{configValue,jdbcType=VARCHAR}, #{keyDesc,jdbcType=VARCHAR}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.roiland.cms.persistence.gen.model.AppConfig" >
    insert into app_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appConfigId != null" >
        app_config_id,
      </if>
      <if test="configValue != null" >
        config_value,
      </if>
      <if test="keyDesc != null" >
        key_desc,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appConfigId != null" >
        #{appConfigId,jdbcType=INTEGER},
      </if>
      <if test="configValue != null" >
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="keyDesc != null" >
        #{keyDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roiland.cms.persistence.gen.model.AppConfigCriteria" resultType="java.lang.Integer" >
    select count(*) from app_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update app_config
    <set >
      <if test="record.appConfigId != null" >
        app_config_id = #{record.appConfigId,jdbcType=INTEGER},
      </if>
      <if test="record.configValue != null" >
        config_value = #{record.configValue,jdbcType=VARCHAR},
      </if>
      <if test="record.keyDesc != null" >
        key_desc = #{record.keyDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update app_config
    set app_config_id = #{record.appConfigId,jdbcType=INTEGER},
      config_value = #{record.configValue,jdbcType=VARCHAR},
      key_desc = #{record.keyDesc,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.roiland.cms.persistence.gen.model.AppConfig" >
    update app_config
    <set >
      <if test="configValue != null" >
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="keyDesc != null" >
        key_desc = #{keyDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where app_config_id = #{appConfigId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.roiland.cms.persistence.gen.model.AppConfig" >
    update app_config
    set config_value = #{configValue,jdbcType=VARCHAR},
      key_desc = #{keyDesc,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where app_config_id = #{appConfigId,jdbcType=INTEGER}
  </update>
</mapper>