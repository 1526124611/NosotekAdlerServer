<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roiland.cms.persistence.gen.mapper.KnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.roiland.cms.persistence.gen.model.Knowledge" >
    <id column="knowledge_id" property="knowledgeId" jdbcType="INTEGER" />
    <result column="knowledge_catalog" property="knowledgeCatalog" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="reply_times" property="replyTimes" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_appuser_id" property="createAppuserId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_appuser_id" property="updateAppuserId" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.roiland.cms.persistence.gen.model.Knowledge" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    knowledge_id, knowledge_catalog, score, reply_times, status, create_appuser_id, create_date, 
    update_appuser_id, update_date
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.roiland.cms.persistence.gen.model.KnowledgeCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roiland.cms.persistence.gen.model.KnowledgeCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge
    where knowledge_id = #{knowledgeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from knowledge
    where knowledge_id = #{knowledgeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.roiland.cms.persistence.gen.model.KnowledgeCriteria" >
    delete from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roiland.cms.persistence.gen.model.Knowledge" useGeneratedKeys="true" keyProperty="knowledgeId" >
    insert into knowledge (knowledge_catalog, score, reply_times, 
      status, create_appuser_id, create_date, 
      update_appuser_id, update_date, content
      )
    values (#{knowledgeCatalog,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{replyTimes,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createAppuserId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateAppuserId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{content,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.roiland.cms.persistence.gen.model.Knowledge" useGeneratedKeys="true" keyProperty="knowledgeId" >
    insert into knowledge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="knowledgeCatalog != null" >
        knowledge_catalog,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="replyTimes != null" >
        reply_times,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createAppuserId != null" >
        create_appuser_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateAppuserId != null" >
        update_appuser_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="knowledgeCatalog != null" >
        #{knowledgeCatalog,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="replyTimes != null" >
        #{replyTimes,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createAppuserId != null" >
        #{createAppuserId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAppuserId != null" >
        #{updateAppuserId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roiland.cms.persistence.gen.model.KnowledgeCriteria" resultType="java.lang.Integer" >
    select count(*) from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update knowledge
    <set >
      <if test="record.knowledgeId != null" >
        knowledge_id = #{record.knowledgeId,jdbcType=INTEGER},
      </if>
      <if test="record.knowledgeCatalog != null" >
        knowledge_catalog = #{record.knowledgeCatalog,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.replyTimes != null" >
        reply_times = #{record.replyTimes,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createAppuserId != null" >
        create_appuser_id = #{record.createAppuserId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAppuserId != null" >
        update_appuser_id = #{record.updateAppuserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update knowledge
    set knowledge_id = #{record.knowledgeId,jdbcType=INTEGER},
      knowledge_catalog = #{record.knowledgeCatalog,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      reply_times = #{record.replyTimes,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_appuser_id = #{record.createAppuserId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_appuser_id = #{record.updateAppuserId,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update knowledge
    set knowledge_id = #{record.knowledgeId,jdbcType=INTEGER},
      knowledge_catalog = #{record.knowledgeCatalog,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      reply_times = #{record.replyTimes,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_appuser_id = #{record.createAppuserId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_appuser_id = #{record.updateAppuserId,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.roiland.cms.persistence.gen.model.Knowledge" >
    update knowledge
    <set >
      <if test="knowledgeCatalog != null" >
        knowledge_catalog = #{knowledgeCatalog,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="replyTimes != null" >
        reply_times = #{replyTimes,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createAppuserId != null" >
        create_appuser_id = #{createAppuserId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAppuserId != null" >
        update_appuser_id = #{updateAppuserId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=CLOB},
      </if>
    </set>
    where knowledge_id = #{knowledgeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.roiland.cms.persistence.gen.model.Knowledge" >
    update knowledge
    set knowledge_catalog = #{knowledgeCatalog,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      reply_times = #{replyTimes,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_appuser_id = #{createAppuserId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_appuser_id = #{updateAppuserId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=CLOB}
    where knowledge_id = #{knowledgeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.roiland.cms.persistence.gen.model.Knowledge" >
    update knowledge
    set knowledge_catalog = #{knowledgeCatalog,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      reply_times = #{replyTimes,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_appuser_id = #{createAppuserId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_appuser_id = #{updateAppuserId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where knowledge_id = #{knowledgeId,jdbcType=INTEGER}
  </update>
</mapper>